@use "sass:math";

$grid-columns: 12;

// $place-content: start, end, center, baseline, stretch, space-between,
//   space-around, space-evenly;
// $place-items: start, end, center, baseline, stretch;
// $place-self: start, end, center, stretch, auto;

// $grid-items: (
//   "place-content": $place-content,
//   "place-items": $place-items,
//   "place-self": $place-self,
// );

// Grid row

.row {
  display: flex;
  flex-flow: row wrap;
}

// Grid Loop
@each $key, $data in $grid-items {
  @each $val in $data {
    .#{$key}-#{$val} {
      #{$key}: $val;
    }
  }
}

// Col Classes
@include xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
